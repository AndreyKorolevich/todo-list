{"version":3,"sources":["Components/Weekdays/Day/Day.module.css","Components/Things/DnDStar/Star.module.css","Components/Things/Things.module.css","Components/Things/DnDStar/Constants/Constants.js","Components/Weekdays/Day/Day.js","Components/Weekdays/Weeksday.js","Components/Things/Form/Form.js","Components/Things/DnDStar/Star.js","Components/Things/Notes/Note/Note.js","Components/Things/Notes/Notes.js","Components/Things/Things.js","App.js","serviceWorker.js","index.js","Components/Things/Notes/Note/Note.module.css"],"names":["module","exports","ItemTypes","Day","props","useDrop","accept","drop","index","collect","monitor","isOver","canDrop","isActive","ref","type","className","cn","classes","darkkhaki","darkgreen","date","active","onClick","changeWeekday","day","name","Weekdays","weekdays","map","key","Form","onCreate","useState","thing","setThing","time","setTime","onSubmit","event","preventDefault","trim","htmlFor","value","onChange","target","id","placeholder","Star","useDrag","item","end","dropResult","getDropResult","changeNotes","isDragging","drag","star","opacity","Note","note","deleteThing","updateThing","updateTime","editModeThing","setEditModeThing","editModeTime","setEditModeTime","changeThing","tagName","changeTime","wrapper","onDoubleClick","completed","e","currentTarget","autoFocus","onBlur","delete","Notes","notes","filter","CSSTransition","classNames","timeout","TransitionGroup","component","Things","App","Date","getDay","setDate","setWeekday","currentlyWeekday","setDay","useEffect","a","localStorage","getItem","JSON","parse","setItem","stringify","setInterval","toLocaleTimeString","hour12","split","slice","join","forEach","weekday","indexDay","indexNote","i","length","sortNotes","sort","b","DndProvider","backend","HTML5Backend","indexThing","nanoid","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bc74b35e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Day_active__3lu-H\",\"darkkhaki\":\"Day_darkkhaki__3juBe\",\"darkgreen\":\"Day_darkgreen__58Ar-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"Star_star__Yh6FI\",\"opacity\":\"Star_opacity__2QXPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Things_wrapper__SLLBH\"};","export const ItemTypes = {\r\n    STAR: 'star'\r\n}","import React from \"react\";\r\nimport classes from \"./Day.module.css\";\r\nimport {useDrop} from 'react-dnd';\r\nimport {ItemTypes} from '../../Things/DnDStar/Constants/Constants';\r\nimport cn from 'classnames';\r\n\r\n\r\nexport const Day = (props) => {\r\n    const [{canDrop, isOver}, drop] = useDrop({\r\n        accept: ItemTypes.STAR,\r\n        drop: () => ({index: props.index}),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    })\r\n    const isActive = canDrop && isOver;\r\n    return (\r\n        <button ref={drop} type=\"button\"\r\n                className={cn(\"btn btn-success size\", {[classes.darkkhaki]: canDrop}, {[classes.darkgreen]: isActive},\r\n                    {[\"active\"]: (props.index === props.date)}, {[classes.active]: isActive})}\r\n                onClick={() => {\r\n                    props.changeWeekday(props.index);\r\n                }}>\r\n            <div>{props.day.name}</div>\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {Day} from \"./Day/Day\";\r\n\r\nexport  const Weekdays = (props) => {\r\n    let day = props.weekdays\r\n        .map((day, index) => (<Day day={day} changeWeekday={props.changeWeekday}\r\n                                   date={props.date} key={index} index={index}/>))\r\n\r\nreturn (\r\n    <nav className='navbar navbar-dark navbar-expand-lg bg-primary'>\r\n        <div className='navbar-brand' >\r\n            SPA\r\n        </div>\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n                <div className=\"nav-link\">{day} <span className=\"sr-only\">(current)</span></div>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useState} from \"react\";\r\n\r\nexport const Form = ({onCreate}) => {\r\n\r\n    let [thing, setThing] = useState('');\r\n    let [time, setTime] = useState('')\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(thing.trim() && time.trim()) {\r\n            onCreate(thing, time);\r\n            setThing('');\r\n            setTime('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-row\">\r\n                <div className=\"col\">\r\n                    <label className=\"sr-only\" htmlFor=\"inlineFormInput\">Thing</label>\r\n                    <input value={thing} onChange={event => setThing(event.target.value)} type=\"text\" className=\"form-control mb-2\" id=\"inlineFormInput\"\r\n                           placeholder=\"Text your thing\"/>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <label className=\"sr-only\" htmlFor=\"inlineFormInputGroup\">Username</label>\r\n                    <div className=\"input-group mb-2\">\r\n                        <input value={time} onChange={event => setTime(event.target.value)} type=\"text\" className=\"form-control\" id=\"inlineFormInputGroup\"\r\n                               placeholder=\"Format time 13:30\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-auto\">\r\n                    <button type=\"submit\"  className=\"btn btn-primary mb-2\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from \"react\";\r\nimport classes from \"./Star.module.css\";\r\nimport { ItemTypes } from './Constants/Constants';\r\nimport { useDrag } from 'react-dnd';\r\nimport cn from 'classnames';\r\n\r\n\r\nexport const Star = (props) => {\r\n    const [{isDragging}, drag] = useDrag({\r\n        item: { type: ItemTypes.STAR },\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult()\r\n            if (item && dropResult) {\r\n               props.changeNotes(dropResult.index)\r\n            }\r\n        },\r\n        collect: monitor => ({\r\n            isDragging: !!monitor.isDragging(),\r\n        }),\r\n    })\r\n    return (\r\n        <div ref={drag}\r\n            className={cn(classes.star,{[classes.opacity]:isDragging})}>&#10034;</div>\r\n    )\r\n}","import React, { useState} from \"react\";\r\nimport classes from \"./Note.module.css\";\r\nimport cn from 'classnames'\r\n\r\nexport const Note = ({note, deleteThing, updateThing, updateTime}) => {\r\n    const [editModeThing, setEditModeThing] = useState(false);\r\n    const [editModeTime, setEditModeTime] = useState(false);\r\n    const [thing, setThing] = useState(note.thing);\r\n    const [time, setTime] = useState(note.time);\r\n\r\n    const changeThing = (event) => {\r\n        setEditModeThing(!editModeThing);\r\n        if(event.target.tagName === 'INPUT') {\r\n            updateThing(thing, note.id)\r\n        }\r\n    }\r\n\r\n    const changeTime = (event) => {\r\n        setEditModeTime(!editModeTime);\r\n        if(event.target.tagName === 'INPUT') {\r\n            updateTime(time, note.id)\r\n        }\r\n    }\r\n\r\n    const onChangeThing = (e) => {\r\n        setThing(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeTime = (e) => {\r\n        setTime(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <div className={classes.wrapper}>\r\n                {!editModeThing &&\r\n                <div onDoubleClick={changeThing} className={cn(classes.thing,{ [classes.completed]: note.completed})}>\r\n                    {note.thing}\r\n                </div>\r\n                }\r\n                {editModeThing &&\r\n                <div className={classes.thing}>\r\n                    <input onChange={onChangeThing} autoFocus={true} onBlur={changeThing} value={thing}/>\r\n                </div>\r\n                }\r\n                {!editModeTime &&\r\n                <div onDoubleClick={changeTime} className={cn(classes.time,{ [classes.completed]: note.completed})}>\r\n                    {note.time}\r\n                </div>\r\n                }\r\n                {editModeTime &&\r\n                <div className={classes.time}>\r\n                    <input onChange={onChangeTime} autoFocus={true} onBlur={changeTime} value={time}/>\r\n                </div>\r\n                }\r\n                <div className={classes.delete}>\r\n                    <button onClick={() => {\r\n                        deleteThing(note.id)\r\n                    }} type=\"button\" className=\"btn btn-outline-danger btn-sm\">\r\n                        &times;\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React from \"react\";\r\nimport {Note} from \"./Note/Note\";\r\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\r\n\r\nexport const Notes = ({notes, deleteThing, updateThing, updateTime}) => {\r\n\r\n    if (notes === null) {\r\n        return <></>\r\n    }\r\n\r\n    let note = notes\r\n        .filter(note => note)\r\n        .map((note, index) => {\r\n            return <CSSTransition  key={index} classNames={'note'} timeout={400}>\r\n                     <Note deleteThing={deleteThing}\r\n                      note={note}\r\n                      updateThing={updateThing}\r\n                      updateTime={updateTime}/>\r\n                    </CSSTransition>\r\n        })\r\n\r\n    return (\r\n        <div>\r\n            <TransitionGroup component=\"ul\"  className=\"list-group\">\r\n                {note}\r\n            </TransitionGroup>\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport classes from \"./Things.module.css\";\r\nimport {Form} from \"./Form/Form\";\r\nimport {Star} from \"./DnDStar/Star\";\r\nimport {Notes} from \"./Notes/Notes\";\r\n\r\nexport  const Things = ({notes, deleteThing, onCreate, updateThing, updateTime, changeNotes}) => {\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <Star changeNotes={changeNotes}/>\r\n                <div className=\"container\">\r\n                    <Notes notes={notes} deleteThing={deleteThing}\r\n                            updateThing={updateThing} updateTime={updateTime}/>\r\n                    <hr/>\r\n                    <Form onCreate={onCreate}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\nimport {Weekdays} from \"./Components/Weekdays/Weeksday\";\nimport { Things} from \"./Components/Things/Things\";\nimport {nanoid} from 'nanoid';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nconst App = () => {\n    const [date, setDate] = useState(new Date().getDay());\n\n    const [weekdays, setWeekday] = useState([\n        {name: 'Sunday', notes: []},\n        {name: 'Monday', notes: []},\n        {name: 'Tuesday', notes: []},\n        {name: 'Wednesday', notes: []},\n        {name: 'Thursday', notes: []},\n        {name: 'Friday', notes: []},\n        {name: 'Saturday', notes: []},\n    ])\n    const [currentlyWeekday, setDay] = useState(date);\n    useEffect(() => {\n        const a = new Date().getDay();\n        setDate(a);\n        if(localStorage.getItem('weekdays') == null){\n            setWeekday(weekdays)\n        } else {\n            setWeekday(JSON.parse(localStorage.getItem('weekdays')))\n        }\n    }, [])\n\n    useEffect(() => {\n         localStorage.setItem('weekdays', JSON.stringify(weekdays));\n    })\n\n    const changeNotes = (indexDay) => {\n        setWeekday(\n            weekdays.map((day, index) => {\n                if (index === indexDay) {\n                  day.notes = [...weekdays[currentlyWeekday].notes]\n                }\n                return day;\n            })\n        )\n    }\n\n    const checkNotes = () => {\n        let date = new Date().toLocaleTimeString('en-US', {hour12: false}).split(':').slice(0, 2).join(':')\n        weekdays.forEach((weekday, indexDay) => {\n            for (let indexNote = 0; indexNote < weekday.notes.length; indexNote++) {\n                if (weekday.notes[indexNote] == null) {\n                    continue\n                }\n                if (weekday.notes[indexNote].time < date) {\n                    setWeekday(\n                        weekdays\n                            .map((day, i) => {\n                                if (i === indexDay) {\n                                    day.notes[indexNote].completed = true;\n                                }\n                                return day;\n                            })\n                    )\n                }\n            }\n        })\n    }\n\n    setInterval(checkNotes, 60000)\n\n    const updateThing = (thing, indexThing) => {\n        setWeekday(\n            weekdays.map((day, index) => {\n                if (index === currentlyWeekday) {\n                    for (let i = 0; i <= day.notes.length; i++) {\n                        if (day.notes[i] == null) {\n                            continue\n                        }\n                        if (day.notes[i].id === indexThing) {\n                            day.notes[i] = {\n                                ...day.notes[i],\n                                thing\n                            }\n                        }\n                    }\n                }\n                return day;\n            })\n        )\n    }\n\n    const updateTime = (time, indexThing) => {\n        setWeekday(\n            weekdays.map((day, i) => {\n                if (i === currentlyWeekday) {\n                    for (let i = 0; i <= day.notes.length; i++) {\n                        if (day.notes[i] == null) {\n                            continue\n                        }\n                        if (day.notes[i].id === indexThing) {\n                            day.notes[i] = {\n                                ...day.notes[i],\n                                time\n                            }\n                            sortNotes(day.notes)\n                        }\n                    }\n                }\n                return day;\n            })\n        )\n    }\n\n    const changeWeekday = (index) => {\n        setDay(index);\n    }\n\n    const deleteThing = (indexThing) => {\n        setWeekday(\n            weekdays.map((day, index) => {\n                if (index === currentlyWeekday) {\n                    for (let i = 0; i <= day.notes.length; i++) {\n                        if (day.notes[i] == null) {\n                            continue\n                        }\n                        if (day.notes[i].id === indexThing) {\n                            day.notes[i] = null;\n                        }\n                    }\n                }\n                return day;\n            })\n        )\n    }\n\n    const sortNotes = (notes) => {\n        notes.sort((a, b) => {\n            if (a == null || b == null) {\n                return\n            }\n            if (a.time > b.time) {\n                return 1\n            }\n            if (a.time < b.time) {\n                return -1\n            }\n            return 0\n        })\n    }\n\n    const onCreate = (thing, time) => {\n        setWeekday(\n            weekdays.map((day, i) => {\n                if (i === currentlyWeekday) {\n                    day.notes = [...day.notes, {\n                        id: nanoid(8),\n                        time,\n                        thing,\n                        completed: false\n                    }]\n                    sortNotes(day.notes)\n                }\n                return day;\n            })\n        )\n    }\n\n\n    return (\n        <DndProvider backend={HTML5Backend}>\n            <div className=\"container\">\n                <Weekdays date={currentlyWeekday} weekdays={weekdays} changeWeekday={changeWeekday}/>\n                <Things changeNotes={changeNotes}\n                       notes={weekdays[currentlyWeekday].notes}\n                       deleteThing={deleteThing}\n                       onCreate={onCreate}\n                       updateThing={updateThing}\n                       updateTime={updateTime}/>\n            </div>\n        </DndProvider>\n    );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n // <React.StrictMode>\n    <App />,\n//  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"Note_time__3iuL6\",\"delete\":\"Note_delete__3wT3s\",\"thing\":\"Note_thing__3Ugoh\",\"wrapper\":\"Note_wrapper__YYn4A\",\"completed\":\"Note_completed__3y4Rx\"};"],"sourceRoot":""}